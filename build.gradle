import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22'
	id "org.jetbrains.kotlin.plugin.allopen" version "1.9.22"
}

group = 'com.hancook'
version = '0.0.1-SNAPSHOT'

allOpen {
	annotation("jakarta.persistence.Entity")
	annotation("jakarta.persistence.Embeddable")
	annotation("jakarta.persistence.MappedSuperclass")
}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'net.bytebuddy:byte-buddy-dep:1.14.12'

	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation('org.springframework.boot:spring-boot-starter-validation')
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude(module : "mockito-core")
	}
	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
	testImplementation("com.ninja-squad:springmockk:4.0.2")
	compileOnly("org.springframework.boot:spring-boot-devtools")


}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
